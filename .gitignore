# Dependencies
node_modules/
npm-debug.log*
yarn-debug.log*
yarn-error.log*

# Environment variables
.env
.env.local
.env.development.local
.env.test.local
.env.production.local

# Build outputs
dist/
build/
.next/
out/

# Frontend build artifacts
frontend/dist/
frontend/build/

# Backend build artifacts
backend/dist/

# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Coverage directory used by tools like istanbul
coverage/
*.lcov

# nyc test coverage
.nyc_output

# Dependency directories
jspm_packages/

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# parcel-bundler cache (https://parceljs.org/)
.cache
.parcel-cache

# Next.js build output
.next

# Nuxt.js build / generate output
.nuxt
dist

# Gatsby files
.cache/
public

# Storybook build outputs
.out
.storybook-out

# Temporary folders
tmp/
temp/

# Editor directories and files
.vscode/
.idea/
*.swp
*.swo
*~

# OS generated files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Database files
*.db
*.sqlite
*.sqlite3

# Supabase local development
.supabase/

# Vite
vite.config.js.timestamp-*

# Tailwind CSS
static/css/

# React Hot Loader
.hot

# Testing
test-results/
playwright-report/

# Miscellaneous
.cache/
*.tgz
*.tar.gz

# Local development
.env.local
.env.development.local
.env.test.local
.env.production.local

# Backup files
*.bak
*.backup
*.old

# PDF generation temp files
*.pdf

# QR Code temp files
*.png
*.jpg
*.jpeg

# Excel/CSV exports
*.xlsx
*.csv

# Windows executables
*.exe
*.msi
*.msm
*.msp

# Linux executables
*.out

# Mac executables
*.app

# Package manager lock files (uncomment if you want to ignore them)
# package-lock.json
# yarn.lock

# Keep these in version control:
# - package-lock.json (already committed)
# - yarn.lock (if using yarn)
